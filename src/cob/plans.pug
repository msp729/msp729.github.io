doctype

include /share

html
    head
        title cob plans
        +univ(1)
    +stbody
        h1.frak Cob plans
        +cobnav("plans", 0)
        p At present, I'm planning for Cob to feature an OOP model similar to Java/C#.
            br
            ="It ought to have annotations (attributes? name TBD) that indicate that a particular "
            ="piece of code has no side effects, something like:"
        code
            pre.
                pure double ln(double x) {
                    // natural logarithm goes here...
                    // the compiler would check this code more strictly, to ensure that it is actually pure
                }
                pure class Complex {
                    double real, imag; // the compiler would treat these fields as const
                }
                pure namespace math {
                    double lgamma(double x) {
                        // the compiler would treat all members of the math namespace as pure by default
                    }

                    impure string toString(double x) {
                        lgamma(x); // this is fine
                        // the compiler would recognize this as not pure, in spite of the namespace
                    }

                    string criminal(double x) {
                        toString(x); // this is not fine, because pure code can't call impure code.
                    }
                    pure int redundant() {
                        //ok, but it should probably issue a warning.
                    }
                }
        p In addition, the compiler ought to be good with generics and interfaces:
        code
            pre.
                interface Addable {
                    Self add(Self other);
                }
                T sum(T a, T b) {
                    return a.add(b); // this is fine
                }
